# Build and digitally sign the JAR file, then upload it to Maven
name: Build and digitally sign the JAR


on: push # TODO when we're in production, this should be `release` only, and only on the main branch

# disabled this for testing purposes, will experiment on another branch to see if the GUI is really invoked
#    branches:
#      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      - name: Build the jars
        run: |
          mvn package -DskipTests
          mvn source:jar
          mvn javadoc:jar

      - name: Upload files for subsequent reuse by signer
        uses: actions/upload-artifact@v3
        with:
          name: compiled-jar
          # We only care about 3 files, e.g.: CmpRaComponent-2.2.2.jar, CmpRaComponent-2.2.2-sources.jar and
          # CmpRaComponent-2.2.2-javadoc.jar, however we upload the entire target/ directory, otherwise
          # running `mvn jar:jar` in the next job will say `JAR will be empty - no content was marked for inclusion!`
          # and produce an empty jar.
          path: target

  sign:
    needs: build
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: compiled-jar
          path: target

      - name: Process retrieved files
        # here we sign them, compute hashes and write them to files, then upload to Maven Central
        run: |
          $versionNode = Select-Xml -Path pom.xml -XPath "x:project" -Namespace @{"x"="http://maven.apache.org/POM/4.0.0"} |Select -Expand Node
          $version = $versionNode.version
          $fileToSign = "CmpRaComponent-$version.jar"
          if (-not [Environment]::GetEnvironmentVariable('SignSettingsPath')) {throw "You must set the SignSettingsPath environment variable first"}
          Write-Output "Signing $fileToSign with settings from $env:SignSettingsPath"
          scripts/sign-gui.ps1 target/$fileToSign -settingsFile $env:SignSettingsPath -SignaturePath target/$fileToSign.asc
          Get-FileHash -Path target/$fileToSign -Algorithm MD5 | Select-Object Hash -expandproperty Hash | Out-File target/$fileToSign.md5
          Get-FileHash -Path target/$fileToSign -Algorithm SHA1 | Select-Object Hash -expandproperty Hash | Out-File target/$fileToSign.sha1
          Get-FileHash -Path target/$fileToSign -Algorithm SHA256 | Select-Object Hash -expandproperty Hash | Out-File target/$fileToSign.sha256
          Get-FileHash -Path target/$fileToSign -Algorithm SHA512 | Select-Object Hash -expandproperty Hash | Out-File target/$fileToSign.sha512
          #
          # handling *-sources.jar
          $fileToSign = "CmpRaComponent-$version-sources.jar"
          scripts/sign-gui.ps1 target/$fileToSign -settingsFile $env:SignSettingsPath -SignaturePath target/$fileToSign.asc
          Get-FileHash -Path target/$fileToSign -Algorithm MD5 | Select-Object Hash -expandproperty Hash | Out-File target/$fileToSign.md5
          Get-FileHash -Path target/$fileToSign -Algorithm SHA1 | Select-Object Hash -expandproperty Hash | Out-File target/$fileToSign.sha1
          Get-FileHash -Path target/$fileToSign -Algorithm SHA256 | Select-Object Hash -expandproperty Hash | Out-File target/$fileToSign.sha256
          Get-FileHash -Path target/$fileToSign -Algorithm SHA512 | Select-Object Hash -expandproperty Hash | Out-File target/$fileToSign.sha512
          #
          # handling *-javadoc.jar
          $fileToSign = "CmpRaComponent-$version-javadoc.jar"
          scripts/sign-gui.ps1 target/$fileToSign -settingsFile $env:SignSettingsPath -SignaturePath target/$fileToSign.asc
          Get-FileHash -Path target/$fileToSign -Algorithm MD5 | Select-Object Hash -expandproperty Hash | Out-File target/$fileToSign.md5
          Get-FileHash -Path target/$fileToSign -Algorithm SHA1 | Select-Object Hash -expandproperty Hash | Out-File target/$fileToSign.sha1
          Get-FileHash -Path target/$fileToSign -Algorithm SHA256 | Select-Object Hash -expandproperty Hash | Out-File target/$fileToSign.sha256
          Get-FileHash -Path target/$fileToSign -Algorithm SHA512 | Select-Object Hash -expandproperty Hash | Out-File target/$fileToSign.sha512
          #
          # uploading to Maven Central
          mvn jar:jar nexus-staging:deploy nexus-staging:deploy-staged -DskipTests
          Write-Output "Done"
